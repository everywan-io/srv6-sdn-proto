syntax = "proto3";

package srv6_manager;

import "srv6_sdn_proto/srv6_explicit_path.proto";
import "srv6_sdn_proto/srv6_local_processing_function.proto";
import "srv6_sdn_proto/ip_addr.proto";
import "srv6_sdn_proto/ip_route.proto";
import "srv6_sdn_proto/ip_rule.proto";
import "srv6_sdn_proto/vrf_device.proto";
import "srv6_sdn_proto/interface.proto";
import "srv6_sdn_proto/gre_interface.proto";
import "srv6_sdn_proto/ip_neigh.proto";
import "srv6_sdn_proto/ip_vxlan.proto";
import "srv6_sdn_proto/ip_fdbentries.proto";
import "srv6_sdn_proto/status_codes.proto";
import "srv6_sdn_proto/bridge_device.proto";

// Define the rpc service interface
service SRv6Manager {
  // Create operation
  rpc Create (SRv6ManagerRequest) returns (SRv6ManagerReply) {}
  // Create operation
  rpc Get (SRv6ManagerRequest) returns (SRv6ManagerReply) {}
  // Create operation
  rpc Update (SRv6ManagerRequest) returns (SRv6ManagerReply) {}
  // Remove operation
  rpc Remove (SRv6ManagerRequest) returns (SRv6ManagerReply) {}
  // Shutdown device
  rpc ShutdownDevice (SRv6ManagerRequest) returns (SRv6ManagerReply) {}
}

// The SRv6ManagerRequest message containing entities.
message SRv6ManagerRequest {
  EntityType entity_type = 1;
  oneof srv6_entity {
    SRv6EPRequest srv6_ep_request = 2;
    SRv6LPFRequest srv6_lpf_request = 3;
    IPAddrRequest ipaddr_request = 4;
    IPRuleRequest iprule_request = 5;
    IPRouteRequest iproute_request = 6;
    VRFDeviceRequest vrf_device_request = 7;
    InterfaceRequest interface_request = 8;
    GREInterfaceRequest gre_interface_request = 9;
    IPNeighRequest ipneigh_request = 10;
    IPVxLANRequest ipvxlan_request = 11;
    IPfdbentriesRequest fdbentries_request = 12;
    BridgeDeviceRequest bridge_device_request = 13;
  }
}

// The SRv6EPReply message containing a simple status message
// and some optional fields
message SRv6ManagerReply {
  SbStatusCode status = 1;
  repeated Interface interfaces = 2;
}

/* Entity types */
enum EntityType {
  SRv6ExplicitPath = 0;
  SRv6LocalProcessingFunction = 1;
  IPAddr = 2;
  IPRule = 3;
  IPRoute = 4;
  VRFDevice = 5;
  Interface = 6;
  GREInterface = 7;
  IPNeigh = 8;
  IPVxlan = 9;
  IPfdbentries = 10;
  BridgeDevice = 11;
}